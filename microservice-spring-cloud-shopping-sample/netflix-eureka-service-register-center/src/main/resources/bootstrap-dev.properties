#
spring.application.name=netflix-eureka-service-register-center

# config server information
server.address=127.0.0.1
# required Eureka 服务器启动的端口,default is 8080,eureka default zone server port is 8761
server.port=8761
# optional
server.servlet.context-path=/netflix-eureka-service-register-center

# if we have no set the value ,it will use the ip address
eureka.instance.hostname=${server.address}
# 在某些情况下，Eureka最好公布服务的IP地址而不是主机名。 将eureka.instance.preferIpAddress设置为true，并且当应用程序向eureka注册时，它将使用其IP地址而不是其主机名。
eureka.instance.prefer-ip-address=true
# default is 30
eureka.instance.leaseRenewalIntervalInSeconds=30

# config eureka server
# optional 自我保护模式是否开启,建议设置为true default is true
eureka.server.enable-self-preservation=true
# default is 0.85 we can set the value to 0.49 和期待的续期次数计算有关
eureka.server.renewalPercentThreshold=0.49
# optional default is 0
eureka.server.wait-time-in-ms-when-sync-empty=5

# Standalone Mode
# 默认情况下Eureka 是否服务端也是客户端,如果不是Eureka 服务器集群模式需要关闭自身的注册功能
# 是否将该服务注册到服务治理服务器上,因为当前是服务注册服务器,且不构建任何服务器集群,因此讲起设置为false 表示不将自己注册到Netflix Eureka 服务注册中心上
eureka.client.register-with-eureka=false
# 设置成false 表示启动后不将服务注册中心已注册的服务注册列表更新到本地
eureka.client.fetch-registry=false
# eureka service url default zone is http://localhost:8761/eureka/
# we can also change to http://127.0.0.1:8761/netflix-eureka-service-register-center/eureka
eureka.client.service-url.defaultZone=http://${eureka.instance.hostname}:${server.port}${server.servlet.context-path}/eureka

# 如果您的项目已经使用Thymeleaf作为其模板引擎，则可能无法正确加载Eureka服务器的Freemarker模板,在这种情况下，必须手动配置模板加载器：
spring.freemarker.template-loader-path=classpath:/templates/
spring.freemarker.prefer-file-system-access=false