<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--这里将项目的夫项目设置为Spring Boot-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.8.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <!--设置本项目的groupId artifactId 和版本信息-->
    <groupId>com.xingyun.springcloud</groupId>
    <artifactId>netflix-eureka-discovery-client-service-provider-sample</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>netflix-eureka-discovery-client-service-provider-sample</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>12</java.version>
        <spring-cloud.version>Greenwich.SR2</spring-cloud.version>
        <javax.jaxb.version>2.3.0</javax.jaxb.version>
        <javax.activation.version>1.1.1</javax.activation.version>
        <maven.compiler.plugin.version>3.5.1</maven.compiler.plugin.version>
    </properties>

    <dependencies>
        <!--通过注解省略Getter,Setter,ToString()方法的编写,让项目看起来更清爽简洁-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <!--spring-boot-starter-actuator提供应用监控功能-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <!--spring-boot-starter-web 提供Web 模块支持-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!--spring-cloud-starter-netflix-eureka-client 提供Netflix Eureka 客户端服务发现和注册功能模块支持-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        <!--
     JAXB API是java EE 的API，因此在java SE 9.0 中不再包含这个 Jar 包。
     java 9 中引入了模块的概念，默认情况下，Java SE中将不再包含java EE 的Jar包
     而在 java 6/7 / 8 时关于这个API 都是捆绑在一起的
     JDK 9 以后需要添加如下依赖
      -->
        <!-- Java 6 = JAX-B Version 2.0   -->
        <!-- Java 7 = JAX-B Version 2.2.3 -->
        <!-- Java 8 = JAX-B Version 2.2.8 -->
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>${javax.jaxb.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
            <version>${javax.jaxb.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-core</artifactId>
            <version>${javax.jaxb.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.activation</groupId>
            <artifactId>activation</artifactId>
            <version>${javax.activation.version}</version>
        </dependency>
        <!--spring-boot-starter-test提供单元测试功能支持-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!--统一版本依赖解决多个版本依赖不统一问题-->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <!--该插件可以让Maven项目将工程打包成一个可以直接运行的Jar-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!--该插件限定Maven打包时所使用的版本，避免出现版本不匹配问题-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
